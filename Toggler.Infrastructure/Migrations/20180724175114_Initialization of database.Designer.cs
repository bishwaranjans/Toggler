// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Toggler.Infrastructure.Repositories;

namespace Toggler.Infrastructure.Migrations
{
    [DbContext(typeof(TogglerContext))]
    [Migration("20180724175114_Initialization of database")]
    partial class Initializationofdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Toggler.Domain.Entities.Service", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Version")
                        .IsRequired();

                    b.HasKey("Name");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Toggler.Domain.Entities.ServiceToggle", b =>
                {
                    b.Property<string>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsEnabled");

                    b.Property<bool>("IsServiceExcluded");

                    b.Property<string>("ServiceName");

                    b.Property<string>("ToggleName");

                    b.HasKey("UniqueId");

                    b.HasIndex("ServiceName");

                    b.HasIndex("ToggleName");

                    b.ToTable("ServiceToggles");
                });

            modelBuilder.Entity("Toggler.Domain.Entities.Toggle", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Type");

                    b.HasKey("Name");

                    b.ToTable("Toggles");
                });

            modelBuilder.Entity("Toggler.Domain.Entities.ServiceToggle", b =>
                {
                    b.HasOne("Toggler.Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceName");

                    b.HasOne("Toggler.Domain.Entities.Toggle", "Toggle")
                        .WithMany()
                        .HasForeignKey("ToggleName");
                });
#pragma warning restore 612, 618
        }
    }
}
